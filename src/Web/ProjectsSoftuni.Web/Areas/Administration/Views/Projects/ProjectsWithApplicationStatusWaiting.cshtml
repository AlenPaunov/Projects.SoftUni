@model ProjectsSoftuni.Web.Models.PaginatedList<ProjectsSoftuni.Services.Models.Projects.ProjectIndexViewModel>

@{
    ViewData["Title"] = "Admin Index";
    var projectStatuses = this.ViewData["ProjectStatuses"] as IEnumerable<SelectListItem>;
}

<h1>Projects with Applications Status Waiting</h1>

<p>
    <a asp-action="Index" asp-controller="Home">All Projects</a>
</p>

<form asp-action="ProjectsWithApplicationStatusWaiting" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name or owner: <input type="text" name="searchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="ProjectsWithApplicationStatusWaiting">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="ProjectsWithApplicationStatusWaiting" asp-route-sortOrder="@ViewData["NameSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>
                <a asp-action="ProjectsWithApplicationStatusWaiting" asp-route-sortOrder="@ViewData["OwnerSortParam"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Owner</a>
            </th>
            <th>
                <a asp-action="ProjectsWithApplicationStatusWaiting" asp-route-sortOrder="@ViewData["StatusSortParam"]">Status</a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var project in Model)
        {
            <tr>
                <td>
                    @project.Name
                </td>
                <td>
                    @project.Owner
                </td>
                <td>
                    @project.StatusName
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", "Projects", new { id = project.Id })
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="ProjectsWithApplicationStatusWaiting"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageIndex="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="ProjectsWithApplicationStatusWaiting"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageIndex="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>